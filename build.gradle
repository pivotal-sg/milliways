import com.github.jengelman.gradle.plugins.processes.tasks.JavaFork

buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
    }
    dependencies {
        classpath('com.github.jengelman.gradle.plugins:gradle-processes:0.3.0')
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'com.github.johnrengelman.processes'

jar {
    baseName = 'milliways'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
}


task startMarvin(type: JavaFork) {
    main = "-jar"
    args "lib/marvin-0.0.1-SNAPSHOT.jar"
    systemProperties = [
            'spring.profiles.active': 'test',
            'server.port'           : '9090'
    ]
    doLast {
        Thread.sleep(20000)
    }
}

task stopMarvin << {
    startMarvin.processHandle.abort()
}

test.dependsOn startMarvin
test.finalizedBy stopMarvin

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.composed:spring-composed:1.0.0.BUILD-SNAPSHOT')
    compile('org.projectlombok:lombok:1.16.8')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('com.jayway.restassured:rest-assured:2.9.0')
}


eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}
